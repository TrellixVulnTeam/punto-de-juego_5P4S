/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
var AngularCountdownDateTimeComponent = /** @class */ (function () {
    function AngularCountdownDateTimeComponent() {
        debugger;
    }
    /**
     * @return {?}
     */
    AngularCountdownDateTimeComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        debugger;
        this.endDate = new Date(this.endDateBind);
        setInterval((/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var end = _this.endDate.toDateString();
            /** @type {?} */
            var start = new Date().toDateString();
            _this.diff = Math.floor((_this.endDate.getTime() - new Date().getTime()) / 1000);
            _this.dayTextBind = _this.dayText;
            _this.hourTextBind = _this.hourText;
            _this.minutesTextBind = _this.minutesText;
            _this.secondsTextBind = _this.secondsText;
            _this.days = _this.getDays(_this.diff);
            _this.hours = _this.getHours(_this.diff);
            _this.minutes = _this.getMinutes(_this.diff);
            _this.seconds = _this.getSeconds(_this.diff);
        }), 1000);
    };
    /**
     * @param {?} t
     * @return {?}
     */
    AngularCountdownDateTimeComponent.prototype.getDays = /**
     * @param {?} t
     * @return {?}
     */
    function (t) {
        /** @type {?} */
        var days;
        days = Math.floor(t / 86400);
        return ('0' + days).slice(-2);
    };
    /**
     * @param {?} t
     * @return {?}
     */
    AngularCountdownDateTimeComponent.prototype.getHours = /**
     * @param {?} t
     * @return {?}
     */
    function (t) {
        /** @type {?} */
        var days;
        /** @type {?} */
        var hours;
        days = Math.floor(t / 86400);
        t -= days * 86400;
        hours = Math.floor(t / 3600) % 24;
        return ('0' + hours).slice(-2);
    };
    /**
     * @param {?} t
     * @return {?}
     */
    AngularCountdownDateTimeComponent.prototype.getMinutes = /**
     * @param {?} t
     * @return {?}
     */
    function (t) {
        /** @type {?} */
        var days;
        /** @type {?} */
        var hours;
        /** @type {?} */
        var minutes;
        days = Math.floor(t / 86400);
        t -= days * 86400;
        hours = Math.floor(t / 3600) % 24;
        t -= hours * 3600;
        minutes = Math.floor(t / 60) % 60;
        return ('0' + minutes).slice(-2);
    };
    /**
     * @param {?} t
     * @return {?}
     */
    AngularCountdownDateTimeComponent.prototype.getSeconds = /**
     * @param {?} t
     * @return {?}
     */
    function (t) {
        /** @type {?} */
        var days;
        /** @type {?} */
        var hours;
        /** @type {?} */
        var minutes;
        /** @type {?} */
        var seconds;
        days = Math.floor(t / 86400);
        t -= days * 86400;
        hours = Math.floor(t / 3600) % 24;
        t -= hours * 3600;
        minutes = Math.floor(t / 60) % 60;
        t -= minutes * 60;
        seconds = t % 60;
        return ('0' + seconds).slice(-2);
    };
    AngularCountdownDateTimeComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-angular-countdown-dateTime',
                    template: "<div class=\"count-down\">\r\n  <div class=\"count-down-row\">\r\n    <div>\r\n      <span>\r\n        {{days}}\r\n      </span>\r\n    </div>\r\n    <div>\r\n      <span>\r\n        {{hours}}\r\n      </span>\r\n    </div>\r\n    <div>\r\n      <span>\r\n        {{minutes}}\r\n      </span>\r\n    </div>\r\n    <div>\r\n      <span>\r\n        {{seconds}}\r\n      </span>\r\n    </div>\r\n  </div>\r\n  <div class=\"count-down-row\">\r\n    <div>\r\n      {{dayTextBind}}\r\n    </div>\r\n    <div>\r\n      {{hourTextBind}}\r\n    </div>\r\n    <div>\r\n      {{minutesTextBind}}\r\n    </div>\r\n    <div>\r\n      {{secondsTextBind}}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: [".count-down{background:#fff;border:0 solid #dadada;border-radius:4.48px;position:relative;width:100%;padding:20px 0 10px}.count-down .count-down-row{display:flex;flex-direction:row;justify-content:center;align-items:center;text-align:center}.count-down .count-down-row>div{flex-grow:1;padding-bottom:10px;width:25%}.count-down span{letter-spacing:0;font-size:1.5em;color:#616161;text-align:center;font-weight:500}"]
                }] }
    ];
    /** @nocollapse */
    AngularCountdownDateTimeComponent.ctorParameters = function () { return []; };
    AngularCountdownDateTimeComponent.propDecorators = {
        endDateBind: [{ type: Input }],
        dayText: [{ type: Input }],
        hourText: [{ type: Input }],
        minutesText: [{ type: Input }],
        secondsText: [{ type: Input }]
    };
    return AngularCountdownDateTimeComponent;
}());
export { AngularCountdownDateTimeComponent };
if (false) {
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.endDateBind;
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.dayText;
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.hourText;
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.minutesText;
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.secondsText;
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.endDate;
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.diff;
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.countDownResult;
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.days;
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.hours;
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.minutes;
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.seconds;
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.dayTextBind;
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.hourTextBind;
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.minutesTextBind;
    /** @type {?} */
    AngularCountdownDateTimeComponent.prototype.secondsTextBind;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1jb3VudGRvd24tZGF0ZS10aW1lLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItY291bnRkb3duLWRhdGUtdGltZS8iLCJzb3VyY2VzIjpbImxpYi9hbmd1bGFyLWNvdW50ZG93bi1kYXRlLXRpbWUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxpQkFBaUIsRUFBRyxNQUFNLGVBQWUsQ0FBQztBQUU3RTtJQThCRTtRQUNFLFFBQVEsQ0FBQztJQUNYLENBQUM7Ozs7SUFFRCxvREFBUTs7O0lBQVI7UUFBQSxpQkFpQkM7UUFoQkMsUUFBUSxDQUFDO1FBQ1QsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFMUMsV0FBVzs7O1FBQUM7O2dCQUNOLEdBQUcsR0FBRyxLQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRTs7Z0JBQ2pDLEtBQUssR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLFlBQVksRUFBRTtZQUNyQyxLQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztZQUMvRSxLQUFJLENBQUMsV0FBVyxHQUFHLEtBQUksQ0FBQyxPQUFPLENBQUM7WUFDaEMsS0FBSSxDQUFDLFlBQVksR0FBRyxLQUFJLENBQUMsUUFBUSxDQUFDO1lBQ2xDLEtBQUksQ0FBQyxlQUFlLEdBQUcsS0FBSSxDQUFDLFdBQVcsQ0FBQztZQUN4QyxLQUFJLENBQUMsZUFBZSxHQUFHLEtBQUksQ0FBQyxXQUFXLENBQUM7WUFDeEMsS0FBSSxDQUFDLElBQUksR0FBRyxLQUFJLENBQUMsT0FBTyxDQUFDLEtBQUks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LEtBQUs7MEJBRUwsS0FBSzsyQkFFTCxLQUFLOzhCQUVMLEtBQUs7OEJBRUwsS0FBSzs7SUE0RVIsd0NBQUM7Q0FBQSxBQTNGRCxJQTJGQztTQXJGWSxpQ0FBaUM7OztJQUM1Qyx3REFDb0I7O0lBQ3BCLG9EQUNnQjs7SUFDaEIscURBQ2lCOztJQUNqQix3REFDb0I7O0lBQ3BCLHdEQUNvQjs7SUFHcEIsb0RBQWM7O0lBQ2QsaURBQWE7O0lBQ2IsNERBQXdCOztJQUN4QixpREFBYTs7SUFDYixrREFBYzs7SUFDZCxvREFBZ0I7O0lBQ2hCLG9EQUFnQjs7SUFDaEIsd0RBQW9COztJQUNwQix5REFBcUI7O0lBQ3JCLDREQUF3Qjs7SUFDeEIsNERBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBWaWV3RW5jYXBzdWxhdGlvbiAgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLWFuZ3VsYXItY291bnRkb3duLWRhdGVUaW1lJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FuZ3VsYXItY291bnRkb3duLWRhdGUtdGltZS5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vYW5ndWxhci1jb3VudGRvd24tZGF0ZS10aW1lLmNvbXBvbmVudC5zY3NzJ10sXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgQW5ndWxhckNvdW50ZG93bkRhdGVUaW1lQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KClcbiAgZW5kRGF0ZUJpbmQ6IHN0cmluZztcbiAgQElucHV0KClcbiAgZGF5VGV4dDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBob3VyVGV4dDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBtaW51dGVzVGV4dDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBzZWNvbmRzVGV4dDogc3RyaW5nO1xuXG4gIC8vZW5kRGF0ZTogRGF0ZSA9IG5ldyBEYXRlKCcyMDE5LTA0LTIzIDAwOjAwOjAwJyk7XG4gIGVuZERhdGU6IERhdGU7XG4gIGRpZmY6IG51bWJlcjtcbiAgY291bnREb3duUmVzdWx0OiBudW1iZXI7XG4gIGRheXM6IHN0cmluZztcbiAgaG91cnM6IHN0cmluZztcbiAgbWludXRlczogc3RyaW5nO1xuICBzZWNvbmRzOiBzdHJpbmc7XG4gIGRheVRleHRCaW5kOiBzdHJpbmc7XG4gIGhvdXJUZXh0QmluZDogc3RyaW5nO1xuICBtaW51dGVzVGV4dEJpbmQ6IHN0cmluZztcbiAgc2Vjb25kc1RleHRCaW5kOiBzdHJpbmc7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGRlYnVnZ2VyO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgZGVidWdnZXI7XG4gICAgdGhpcy5lbmREYXRlID0gbmV3IERhdGUodGhpcy5lbmREYXRlQmluZCk7XG5cbiAgICBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICBsZXQgZW5kID0gdGhpcy5lbmREYXRlLnRvRGF0ZVN0cmluZygpO1xuICAgICAgbGV0IHN0YXJ0ID0gbmV3IERhdGUoKS50b0RhdGVTdHJpbmcoKTtcbiAgICAgIHRoaXMuZGlmZiA9IE1hdGguZmxvb3IoKHRoaXMuZW5kRGF0ZS5nZXRUaW1lKCkgLSBuZXcgRGF0ZSgpLmdldFRpbWUoKSkgLyAxMDAwKTtcbiAgICAgIHRoaXMuZGF5VGV4dEJpbmQgPSB0aGlzLmRheVRleHQ7XG4gICAgICB0aGlzLmhvdXJUZXh0QmluZCA9IHRoaXMuaG91clRleHQ7XG4gICAgICB0aGlzLm1pbnV0ZXNUZXh0QmluZCA9IHRoaXMubWludXRlc1RleHQ7XG4gICAgICB0aGlzLnNlY29uZHNUZXh0QmluZCA9IHRoaXMuc2Vjb25kc1RleHQ7XG4gICAgICB0aGlzLmRheXMgPSB0aGlzLmdldERheXModGhpcy5kaWZmKTtcbiAgICAgIHRoaXMuaG91cnMgPSB0aGlzLmdldEhvdXJzKHRoaXMuZGlmZik7XG4gICAgICB0aGlzLm1pbnV0ZXMgPSB0aGlzLmdldE1pbnV0ZXModGhpcy5kaWZmKTtcbiAgICAgIHRoaXMuc2Vjb25kcyA9IHRoaXMuZ2V0U2Vjb25kcyh0aGlzLmRpZmYpO1xuICAgIH0sIDEwMDApO1xuICB9XG5cbiAgZ2V0RGF5cyh0KSB7XG4gICAgbGV0IGRheXM7XG4gICAgZGF5cyA9IE1hdGguZmxvb3IodCAvIDg2NDAwKTtcbiAgICByZXR1cm4gKCcwJyArIGRheXMpLnNsaWNlKC0yKTtcbiAgfVxuXG4gIGdldEhvdXJzKHQpIHtcbiAgICBsZXQgZGF5cywgaG91cnM7XG4gICAgZGF5cyA9IE1hdGguZmxvb3IodCAvIDg2NDAwKTtcbiAgICB0IC09IGRheXMgKiA4NjQwMDtcbiAgICBob3VycyA9IE1hdGguZmxvb3IodCAvIDM2MDApICUgMjQ7XG4gICAgcmV0dXJuICgnMCcgKyBob3Vycykuc2xpY2UoLTIpO1xuICB9XG5cbiAgZ2V0TWludXRlcyh0KSB7XG4gICAgbGV0IGRheXMsIGhvdXJzLCBtaW51dGVzO1xuICAgIGRheXMgPSBNYXRoLmZsb29yKHQgLyA4NjQwMCk7XG4gICAgdCAtPSBkYXlzICogODY0MDA7XG4gICAgaG91cnMgPSBNYXRoLmZsb29yKHQgLyAzNjAwKSAlIDI0O1xuICAgIHQgLT0gaG91cnMgKiAzNjAwO1xuICAgIG1pbnV0ZXMgPSBNYXRoLmZsb29yKHQgLyA2MCkgJSA2MDtcbiAgICByZXR1cm4gKCcwJyArIG1pbnV0ZXMpLnNsaWNlKC0yKTtcbiAgfVxuXG4gIGdldFNlY29uZHModCkge1xuICAgIGxldCBkYXlzLCBob3VycywgbWludXRlcywgc2Vjb25kcztcbiAgICBkYXlzID0gTWF0aC5mbG9vcih0IC8gODY0MDApO1xuICAgIHQgLT0gZGF5cyAqIDg2NDAwO1xuICAgIGhvdXJzID0gTWF0aC5mbG9vcih0IC8gMzYwMCkgJSAyNDtcbiAgICB0IC09IGhvdXJzICogMzYwMDtcbiAgICBtaW51dGVzID0gTWF0aC5mbG9vcih0IC8gNjApICUgNjA7XG4gICAgdCAtPSBtaW51dGVzICogNjA7XG4gICAgc2Vjb25kcyA9IHQgJSA2MDtcbiAgICByZXR1cm4gKCcwJyArIHNlY29uZHMpLnNsaWNlKC0yKTtcbiAgfVxuXG5cblxufVxuIl19