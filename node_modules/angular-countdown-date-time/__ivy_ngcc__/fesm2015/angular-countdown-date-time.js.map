{"version":3,"file":"angular-countdown-date-time.js","sources":["angular-countdown-date-time/lib/angular-countdown-date-time.service.ts","angular-countdown-date-time/lib/angular-countdown-date-time.component.ts","angular-countdown-date-time/lib/angular-countdown-date-time.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularCountdownDateTimeService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, ViewEncapsulation  } from '@angular/core';\n\n@Component({\n  selector: 'lib-angular-countdown-dateTime',\n  templateUrl: './angular-countdown-date-time.html',\n  styleUrls: ['./angular-countdown-date-time.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AngularCountdownDateTimeComponent implements OnInit {\n  @Input()\n  endDateBind: string;\n  @Input()\n  dayText: string;\n  @Input()\n  hourText: string;\n  @Input()\n  minutesText: string;\n  @Input()\n  secondsText: string;\n\n  //endDate: Date = new Date('2019-04-23 00:00:00');\n  endDate: Date;\n  diff: number;\n  countDownResult: number;\n  days: string;\n  hours: string;\n  minutes: string;\n  seconds: string;\n  dayTextBind: string;\n  hourTextBind: string;\n  minutesTextBind: string;\n  secondsTextBind: string;\n  constructor() {\n    debugger;\n  }\n\n  ngOnInit() {\n    debugger;\n    this.endDate = new Date(this.endDateBind);\n\n    setInterval(() => {\n      let end = this.endDate.toDateString();\n      let start = new Date().toDateString();\n      this.diff = Math.floor((this.endDate.getTime() - new Date().getTime()) / 1000);\n      this.dayTextBind = this.dayText;\n      this.hourTextBind = this.hourText;\n      this.minutesTextBind = this.minutesText;\n      this.secondsTextBind = this.secondsText;\n      this.days = this.getDays(this.diff);\n      this.hours = this.getHours(this.diff);\n      this.minutes = this.getMinutes(this.diff);\n      this.seconds = this.getSeconds(this.diff);\n    }, 1000);\n  }\n\n  getDays(t) {\n    let days;\n    days = Math.floor(t / 86400);\n    return ('0' + days).slice(-2);\n  }\n\n  getHours(t) {\n    let days, hours;\n    days = Math.floor(t / 86400);\n    t -= days * 86400;\n    hours = Math.floor(t / 3600) % 24;\n    return ('0' + hours).slice(-2);\n  }\n\n  getMinutes(t) {\n    let days, hours, minutes;\n    days = Math.floor(t / 86400);\n    t -= days * 86400;\n    hours = Math.floor(t / 3600) % 24;\n    t -= hours * 3600;\n    minutes = Math.floor(t / 60) % 60;\n    return ('0' + minutes).slice(-2);\n  }\n\n  getSeconds(t) {\n    let days, hours, minutes, seconds;\n    days = Math.floor(t / 86400);\n    t -= days * 86400;\n    hours = Math.floor(t / 3600) % 24;\n    t -= hours * 3600;\n    minutes = Math.floor(t / 60) % 60;\n    t -= minutes * 60;\n    seconds = t % 60;\n    return ('0' + seconds).slice(-2);\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularCountdownDateTimeComponent } from './angular-countdown-date-time.component';\n\n@NgModule({\n  declarations: [AngularCountdownDateTimeComponent],\n  imports: [\n  ],\n  exports: [AngularCountdownDateTimeComponent]\n})\nexport class AngularCountdownDateTimeModule { }\n"]}